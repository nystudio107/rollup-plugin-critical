import*as n from"path";var p="_critical.min.css",C={inline:!1,extract:!1,width:1200,height:1200,penthouse:{blockJSRequests:!1}};function P(i,s){return{name:"critical",async writeBundle(f,u){let c=[];for(let t of Object.values(u))if(t.type==="asset"&&t.fileName.endsWith(".css")){let r=n.join(f.dir||"",t.fileName);c.push(r)}if(!c.length)return;let m=Array.isArray(i.criticalUrl)?i.criticalUrl:[{url:i.criticalUrl,id:""}];for(let{url:t,id:r=""}of m){if(!t)throw new Error("Configuration is missing a criticalUrl property.");for(let a of i.criticalPages){let g=i.criticalBase,l=t+a.uri,o=i.criticalConfig&&i.criticalConfig.inline==!0?a.template+".html":a.template+(r?"_"+r:"")+p,h=Object.assign({css:c},C,{base:g,src:l,target:o},i.criticalConfig),d=(await import("critical")).generate;console.log(`Generating critical CSS from ${l} to ${o}`),await d(h,e=>{e&&console.error(e),s&&s(e)})}}}}}var w=P;export{w as default};
//# sourceMappingURL=index.mjs.map